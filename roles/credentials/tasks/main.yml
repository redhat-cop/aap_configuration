---
- name: Block for removing old content
  ansible.builtin.block:
    - name: Pull Current Credentials
      ansible.builtin.uri:
        url: "{{ controller_hostname | mandatory }}/api/v2/credentials/"
        method: GET
        return_content: true
        body_format: json
        status_code: [200, 202]
        force_basic_auth: true
        user: "{{ controller_username | default(omit, true) }}"
        password: "{{ controller_password | default(omit, true) }}"
        validate_certs: "{{ controller_validate_certs | default(omit) }}"
      register: r_current_credentials

    - name: Print pulled output
      ansible.builtin.debug:
        var: r_current_credentials
        verbosity: 2

    - name: Create lists
      ansible.builtin.set_fact:
        creds_in_controller: "{{ creds_in_controller | default(['Ansible Galaxy']) + [item.name] }}"
        creds_in_code: "{{ _creds_in_code }}"
      loop: "{{ r_current_credentials.json.results }}"
      vars:
        _creds_in_code: "{{ controller_templates | json_query(_query2) }}"
        _query2: "[].name"

    - name: Print lists
      ansible.builtin.debug:
        msg: "creds_in_controller: {{ creds_in_controller }}, creds_in_code: {{ creds_in_code }}"
        verbosity: 2

    - name: Create list of items to remove
      ansible.builtin.set_fact:
        credentials_to_delete: "{{ creds_in_code | difference(creds_in_controller) }}"

    - name: Delete old Credentials
      ansible.controller.job_template:
        name: "{{ item }}"
        status: "absent"
      loop: "{{ credentials_to_delete }}"
  when: credentials_auto_remove_old

- name: Add Credentials
  credential:
    name:                           "{{ __controller_credentials_item.name | mandatory }}"
    new_name:                       "{{ __controller_credentials_item.new_name | default(omit, true) }}"
    copy_from:                      "{{ __controller_credentials_item.copy_from | default(omit, true) }}"
    description:                    "{{ __controller_credentials_item.description | default(omit, true) }}"
    organization:                   "{{ __controller_credentials_item.organization.name | default( __controller_credentials_item.organization | default(omit, true)) }}"
    credential_type:                "{{ __controller_credentials_item.credential_type.name | default( __controller_credentials_item.credential_type | default(omit, true)) }}"
    inputs:                         "{{ __controller_credentials_item.inputs | default(omit, true) }}"
    user:                           "{{ __controller_credentials_item.user.username | default( __controller_credentials_item.user | default(omit, true)) }}"
    team:                           "{{ __controller_credentials_item.team.name | default( __controller_credentials_item.team | default(omit, true)) }}"
    update_secrets:                 "{{ __controller_credentials_item.update_secrets | default(omit) }}"
    state:                          "{{ __controller_credentials_item.state | default(controller_state | default('present')) }}"

    # Role specific options
    controller_username:            "{{ controller_username | default(omit, true) }}"
    controller_password:            "{{ controller_password | default(omit, true) }}"
    controller_oauthtoken:          "{{ controller_oauthtoken | default(omit, true) }}"
    controller_host:                "{{ controller_hostname | default(omit, true) }}"
    controller_config_file:         "{{ controller_config_file | default(omit, true) }}"
    validate_certs:                 "{{ controller_validate_certs | default(omit) }}"
  loop: "{{ controller_credentials }}"
  loop_control:
    loop_var: __controller_credentials_item
  no_log: "{{ controller_configuration_credentials_secure_logging }}"
...
