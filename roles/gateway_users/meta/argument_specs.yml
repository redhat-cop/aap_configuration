---
argument_specs:
  main:
<<<<<<< HEAD
    short_description: An Ansible Role to create users on Ansible Controller.
    options:
      controller_users:
        description: Data structure describing your users
        type: list
=======
    short_description: An Ansible Role to create users on automation platform gateway.
    options:
      users_list:
        description: Data structure describing your users
        type: list
        required: true
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        elements: dict
        # options:
        #   username:
        #     required: true
        #     type: str
        #     description: Username of user
        #   password:
        #     required: true
        #     type: str
<<<<<<< HEAD
        #     description: Password of user, defaults to "{{ controller_user_default_password }}" if not set
=======
        #     description: Password of user, defaults to "{{ users_default_password }}" if not set
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        #   email:
        #     required: false
        #     type: str
        #     description: email of the user
        #   first_name:
        #     required: false
        #     type: str
        #     description: first_name of the user
        #   last_name:
        #     required: false
        #     type: str
        #     description: last_name of the user
        #   is_superuser:
        #     default: false
        #     required: false
        #     type: bool
        #     description: Whether the user is a superuser
<<<<<<< HEAD
        #   is_system_auditor:
        #     default: false
        #     required: false
        #     type: bool
        #     description: Whether the user is an auditor
=======
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        #   update_secrets:
        #     default: true
        #     required: false
        #     type: bool
<<<<<<< HEAD
        #     description: True will always change password if user specifies password, even if API gives $encrypted$ for password. False will only set the password if other values change too.
=======
        #     description: >
        #       True will always change password if user specifies password, even if API gives $encrypted$ for password.
        #       False will only set the password if other values change too.
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        #   organization:
        #     required: false
        #     type: str
        #     description: Organization this user belongs to.
<<<<<<< HEAD
        #   state:
        #     default: "{{ controller_state | default('present') }}"
=======
        #   authenticators:
        #     required: false
        #     type: list
        #     description: Authenticators this user is associated with
        #   authenticator_uid:
        #     required: false
        #     type: str
        #     description: The uid associated with the users authenticators
        #   state:
        #     default: "{{ gateway_state | default('present') }}"
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        #     required: false
        #     type: str
        #     description: Desired state of the resource.

<<<<<<< HEAD
      controller_user_default_password:
=======
      users_default_password:
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        default: None
        required: false
        type: str
        description: Global variable to set the password for all users.

      # Async variables
<<<<<<< HEAD
      controller_configuration_users_async_retries:
        default: "{{ controller_configuration_async_retries | default(30) }}"
        required: false
        description: This variable sets the number of retries to attempt for the role.
      controller_configuration_async_retries:
        default: 30
        required: false
        description: This variable sets number of retries across all roles as a default.
      controller_configuration_users_async_delay:
        default: "{{ controller_configuration_async_delay | default(1) }}"
        required: false
        description: This variable sets delay between retries for the role.
      controller_configuration_async_delay:
        default: 1
        required: false
        description: This variable sets delay between retries across all roles as a default.
      controller_configuration_async_dir:
        default: null
        required: false
        description: Sets the directory to write the results file for async tasks. The default value is set to `null` which uses the Ansible Default of `/root/.ansible_async/`.


      # No_log variables
      controller_configuration_users_secure_logging:
        default: "{{ controller_configuration_secure_logging | default(true) }}"
        required: false
        type: bool
        description: Whether or not to include the sensitive tasks from this role in the log. Set this value to `true` if you will be providing your sensitive values from elsewhere.
      controller_configuration_secure_logging:
=======
      users_async_retries:
        default: "{{ gateway_configuration_async_retries | default(30) }}"
        required: false
        description: This variable sets the number of retries to attempt for the role.
      gateway_configuration_async_retries:
        default: 30
        required: false
        description: This variable sets number of retries across all roles as a default.
      users_async_delay:
        default: "{{ gateway_configuration_async_delay | default(1) }}"
        required: false
        description: This variable sets delay between retries for the role.
      gateway_configuration_async_delay:
        default: 1
        required: false
        description: This variable sets delay between retries across all roles as a default.
      platform_configuration_async_dir:
        default: null
        required: false
        description: >
          Sets the directory to write the results file for async tasks.
          The default value is set to `null` which uses the Ansible Default of `~/.ansible_async`.


      # No_log variables
      users_secure_logging:
        default: "{{ gateway_configuration_secure_logging | default(true) }}"
        required: false
        type: bool
        description: >
          Whether or not to include the sensitive tasks from this role in the log.
          Set this value to `true` if you will be providing your sensitive values from elsewhere.
      gateway_configuration_secure_logging:
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        default: true
        required: false
        type: bool
        description: This variable enables secure logging across all roles as a default.

      # Generic across all roles
<<<<<<< HEAD
      controller_state:
=======
      gateway_state:
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        default: present
        required: false
        description: The state all objects will take unless overridden by object default
        type: str
<<<<<<< HEAD
      controller_hostname:
        default: None
        required: false
        description: URL to the Ansible Controller Server.
        type: str
      controller_validate_certs:
        default: true
        required: false
        description: Whether or not to validate the Ansible Controller Server's SSL certificate.
        type: str
      controller_username:
        default: None
        required: false
        description: Admin User on the Ansible Controller Server. Either username / password or oauthtoken need to be specified.
        type: str
      controller_password:
        default: None
        required: false
        description: Controller Admin User's password on the Ansible Controller Server. This should be stored in an Ansible Vault at vars/controller-secrets.yml or elsewhere and called from a parent playbook. Either username / password or oauthtoken need to be specified.
        type: str
      controller_oauthtoken:
        default: None
        required: false
        description: Controller Admin User's token on the Ansible Controller Server. This should be stored in an Ansible Vault at or elsewhere and called from a parent playbook. Either username / password or oauthtoken need to be specified.
=======
      gateway_hostname:
        default: None
        required: false
        description: URL to the automation platform gateway.
        type: str
      gateway_validate_certs:
        default: true
        required: false
        description: Whether or not to validate the automation platform gateway's SSL certificate.
        type: str
      gateway_username:
        default: None
        required: false
        description: User on the automation platform gateway. Either username / password or oauthtoken need to be specified.
        type: str
      gateway_password:
        default: None
        required: false
        description: >
          Gateway user's password on the automation platform gateway.
          This should be stored in an Ansible Vault at vars/gateway-secrets.yml or elsewhere and called from a parent playbook.
          Either username / password or oauthtoken need to be specified.
        type: str
      gateway_oauthtoken:
        default: None
        required: false
        description: >
          Gateway user's token on the automation platform gateway.
          This should be stored in an Ansible Vault at or elsewhere and called from a parent playbook.
          Either username / password or oauthtoken need to be specified.
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        type: str
...
