---
- name: Block for removing old content
  block:
    - name: Pull Current organizations
      uri:
        url: "{{ controller_hostname | default(omit, true) }}/api/v2/organizations/"
        method: GET
        return_content: true
        body_format: json
        status_code: [200, 202]
        force_basic_auth: true
        user: "{{ controller_username | default(omit, true) }}"
        password: "{{ controller_password | default(omit, true) }}"
        validate_certs: "{{ controller_validate_certs | default(omit) }}"
      register: r_current_organizations

    - name: Get differences
      set_fact:
        organizations_difference: "{{ _organizations_in_controller | difference(_organizations_in_code) }}"
      vars:
        _organizations_in_controller: "{{ r_current_organizations.json.results | json_query(_query2) }}"
        _query2: "[].name"
        _organizations_in_code: "{{ controller_organizations | json_query(_query1) }}"
        _query1: "[].name"

    - name: Delete old Organizations
      ansible.controller.job_template:
        name: "{{ item }}"
        status: "absent"
      loop: "{{ organizations_to_delete }}"
  when: organizations_auto_remove_old or auto_remove_all_old

- name: Add organizations
  organization:
    name:                               "{{ __controller_organizations_item.name | mandatory }}"
    description:                        "{{ __controller_organizations_item.description | default(omit, true) }}"
    custom_virtualenv:                  "{{ __controller_organizations_item.custom_virtualenv | default(omit, true) }}"
    max_hosts:                          "{{ __controller_organizations_item.max_hosts | default(omit, true) }}"
    instance_groups:                    "{{ __controller_organizations_item.instance_groups | default(omit, true) }}"
    default_environment:                "{{ __controller_organizations_item.default_environment | default(omit, true) }}"
    galaxy_credentials:                 "{{ __controller_organizations_item.galaxy_credentials | default(omit, true) }}"
    notification_templates_approvals:   "{{ __controller_organizations_item.notification_templates_approvals | default(__controller_organizations_item.related.notification_templates_approvals | default([]) | map(attribute='name') | list ) }}"
    notification_templates_started:     "{{ __controller_organizations_item.notification_templates_started | default(__controller_organizations_item.related.notification_templates_started | default([]) | map(attribute='name') | list ) }}"
    notification_templates_success:     "{{ __controller_organizations_item.notification_templates_success | default(__controller_organizations_item.related.notification_templates_success | default([]) | map(attribute='name') | list ) }}"
    notification_templates_error:       "{{ __controller_organizations_item.notification_templates_error | default(__controller_organizations_item.related.notification_templates_error | default([]) | map(attribute='name') | list ) }}"
    state:                              "{{ __controller_organizations_item.state | default(controller_state | default('present')) }}"

    # Role Standard Options
    controller_username:                "{{ controller_username | default(omit, true) }}"
    controller_password:                "{{ controller_password | default(omit, true) }}"
    controller_oauthtoken:              "{{ controller_oauthtoken | default(omit, true) }}"
    controller_host:                    "{{ controller_hostname | default(omit, true) }}"
    controller_config_file:             "{{ controller_config_file | default(omit, true) }}"
    validate_certs:                     "{{ controller_validate_certs | default(omit) }}"
  loop: "{{ controller_organizations }}"
  loop_control:
    loop_var: __controller_organizations_item
  no_log: "{{ controller_configuration_organizations_secure_logging }}"
...
