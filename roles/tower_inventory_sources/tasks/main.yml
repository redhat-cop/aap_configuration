---
- name: Add an inventory source
  awx.awx.tower_inventory_source:
    credential:                  "{{ source.credential | default(omit) }}"
    custom_virtualenv:           "{{ source.custom_virtualenv | default(omit) }}"
    description:                 "{{ source.description | default(omit) }}"
    group_by:                    "{{ source.group_by | default(omit) }}"
    instance_filters:            "{{ source.instance_filters | default(omit) }}"
    inventory:                   "{{ source.inventory }}"  # REQUIRED
    name:                        "{{ source.name }}"  # REQUIRED
    overwrite:                   "{{ source.overwrite | default(omit) }}"
    overwrite_vars:              "{{ source.overwrite_vars | default(omit) }}"
    source:                      "{{ source.source }}"  # REQUIRED
    source_path:                 "{{ source.source_path | default(omit) }}"
    source_project:              "{{ source.source_project | default(omit) }}"
    source_regions:              "{{ source.source_regions | default(omit) }}"
    source_script:               "{{ source.source_script | default(omit) }}"
    source_vars:                 "{{ source.source_vars | default(omit) }}"
    state:                       "{{ source.state | default('present') }}"
    timeout:                     "{{ source.timeout | default(omit) }}"
    update_cache_timeout:        "{{ source.update_cache_timeout | default(omit) }}"
    update_on_launch:            "{{ source.update_on_launch | default(omit) }}"
    update_on_project_update:    "{{ source.update_on_project_update | default(omit) }}"
    tower_config_file:           "{{ tower_config_file | default(omit) }}"
    tower_host:                  "{{ tower_hostname | default(omit) }}"
    tower_username:              "{{ tower_username | default(omit) }}"
    tower_password:              "{{ tower_password | default(omit) }}"
    tower_oauthtoken:            "{{ tower_oauthtoken | default(omit) }}"
    validate_certs:              "{{ tower_verify_ssl | default('false') }}"
  loop: "{{ tower_inventory_sources }}"
  loop_control:
    loop_var: source
  when: tower_inventory_sources is defined
...
