---
- name: async_workflow | An async_workflow block
  block:
    - name: async_workflow | Managing Controller Workflow Job Templates | Wait for finish the Workflow Job Templates management
      ansible.builtin.async_status:
        jid: "{{ __workflows_job_async_results_item.ansible_job_id }}"
      register: __workflows_job_async_result
      until: __workflows_job_async_result.finished
      retries: "{{ controller_configuration_workflow_async_retries }}"
      delay: "{{ controller_configuration_workflow_async_delay }}"

  rescue:
    - name: async_workflow | Load error details
      ansible.builtin.include_vars:
        file: "{{ __workflows_job_async_result.results_file }}"
        name: __error_data

    - name: async_workflow | Show error and stop execution
      when: not collect_logs
      ansible.builtin.fail:
        msg: "error: {{ __error_data['msg'] }}, response: {{ __error_data['response'] }}"

    - name: async_workflow | Building list of not processed workflows
      ansible.builtin.set_fact:
        __workflows_error_list: "{{ __workflows_error_list | default([]) + [
                                                                            {
                                                                             'name': __error_data['invocation']['module_args']['name'] | default ('N/A'),
                                                                             'error': __error_data['msg'] | default(__workflows_job_async_result['msg'])
                                                                            }
                                                                           ]
                                }}"
...
