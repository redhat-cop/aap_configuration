---
- name: Block for removing old content
  ansible.builtin.block:
    - name: Pull Current Inventories
      ansible.builtin.uri:
        url: "{{ controller_hostname | mandatory }}/api/v2/inventories/"
        method: GET
        return_content: true
        body_format: json
        status_code: [200, 202]
        force_basic_auth: true
        user: "{{ controller_username | default(omit, true) }}"
        password: "{{ controller_password | default(omit, true) }}"
        validate_certs: "{{ controller_validate_certs | default(omit) }}"
      register: r_current_inventories

    - name: Print pulled output
      ansible.builtin.debug:
        var: r_current_inventories
        verbosity: 2

    - name: Create lists
      ansible.builtin.set_fact:
        inventories_in_controller: "{{ inventories_in_controller | default([]) + [item.name] }}"
        inventories_in_code: "{{ _inventories_in_code }}"
      loop: "{{ r_current_inventories.json.results }}"
      vars:
        _inventories_in_code: "{{ controller_templates | json_query(_query2) }}"
        _query2: "[].name"

    - name: Print lists
      ansible.builtin.debug:
        msg: "inventories_in_controller: {{ inventories_in_controller }}, inventories_in_code: {{ inventories_in_code }}"
        verbosity: 2

    - name: Create list of items to remove
      ansible.builtin.set_fact:
        inventories_to_delete: "{{ inventories_in_code | difference(inventories_in_controller) }}"

    - name: Delete old Inventories
      ansible.controller.job_template:
        name: "{{ item }}"
        status: "absent"
      loop: "{{ inventories_to_delete }}"
  when: inventories_auto_remove_old

- name: Create inventory
  inventory:
    name:                       "{{ __controller_inventory_item.name | mandatory }}"
    copy_from:                  "{{ __controller_inventory_item.copy_from | default(omit, true) }}"
    description:                "{{ __controller_inventory_item.description | default(omit, true) }}"
    organization:               "{{ __controller_inventory_item.organization.name | default( __controller_inventory_item.organization ) | mandatory }}"
    instance_groups:            "{{ __controller_inventory_item.instance_groups | default(omit, true) }}"
    variables:                  "{{ __controller_inventory_item.variables | default(omit, true) | regex_replace('[ ]{2,}','') }}"
    kind:                       "{{ __controller_inventory_item.kind | default(omit, true) }}"
    host_filter:                "{{ __controller_inventory_item.host_filter | default(omit, true) }}"
    state:                      "{{ __controller_inventory_item.state | default(controller_state | default('present')) }}"

    # Role Standard Options
    controller_config_file:     "{{ controller_config_file | default(omit, true) }}"
    controller_host:            "{{ controller_hostname | default(omit, true) }}"
    controller_username:        "{{ controller_username | default(omit, true) }}"
    controller_password:        "{{ controller_password | default(omit, true) }}"
    controller_oauthtoken:      "{{ controller_oauthtoken | default(omit, true) }}"
    validate_certs:             "{{ controller_validate_certs | default(omit) }}"
  loop: "{{ controller_inventories }}"
  loop_control:
    loop_var: __controller_inventory_item
  no_log: "{{ controller_configuration_inventories_secure_logging }}"
...
