---
- name: "Get the inventoryes from the API"
  set_fact:
    inventory_lookvar: "{{ query('ansible.controller.controller_api', 'api/v2/inventories/', host=controller_hostname, oauth_token=oauthtoken, verify_ssl=controller_validate_certs, return_all=true, query_params={
                          'has_inventory_sources': 'false',
                          'not__kind': 'smart',
                          'order_by': 'organization'
                        }
                      )
             }}"

- name: "Translate the inventories to a useful structure"
  set_fact:
    current_inventories: "{{ (current_inventories | default({})) | combine({(inventory_lookvar_item_organization | default('ORGANIZATIONLESS', true)): (current_inventories[inventory_lookvar_item_organization] | default([])) + [{
        'has_inventory_sources': inventory_lookvar_item.has_inventory_sources,
        'id': inventory_lookvar_item.id,
        'name': inventory_lookvar_item.name,
        'description': inventory_lookvar_item.description,
        'organization': inventory_lookvar_item_organization,
        'host_filter': inventory_lookvar_item.host_filter,
        'kind': inventory_lookvar_item.kind,
        'variables': inventory_lookvar_item.variables,
        'inventory_sources': query('ansible.controller.controller_api', inventory_lookvar_item.related.inventory_sources, host=controller_hostname, oauth_token=oauthtoken, verify_ssl=controller_validate_certs, return_all=true),
        'hosts': query('ansible.controller.controller_api', inventory_lookvar_item.related.hosts, host=controller_hostname, oauth_token=oauthtoken, verify_ssl=controller_validate_certs, return_all=true),
        'groups': query('ansible.controller.controller_api', inventory_lookvar_item.related.groups, host=controller_hostname, oauth_token=oauthtoken, verify_ssl=controller_validate_certs, return_all=true)
      }]}) }}"
    needed_paths: "{{ ((needed_paths | default([])) + [inventory_lookvar_item_organization]) | flatten | unique }}"
  vars:
    inventory_lookvar_item_organization: "{{ lookup('ansible.controller.controller_api', 'api/v2/organizations/'+(inventory_lookvar_item.organization|string), host=controller_hostname, oauth_token=oauthtoken, verify_ssl=controller_validate_certs, return_all=true)['name'] }}"
  loop: "{{ inventory_lookvar }}"
  loop_control:
    loop_var: inventory_lookvar_item
    label: "{{ inventory_lookvar_item_organization }} - {{ inventory_lookvar_item.name }}"

- name: "Create the output directory for inventories: {{ output_path }}/<ORGANIZATION_NAME>"
  file:
    path: "{{ output_path }}/{{ needed_path }}"
    state: directory
    mode: '0755'
  loop: "{{ needed_paths | default([]) }}"
  loop_control:
    loop_var: needed_path
    label: "{{ output_path }}/{{ needed_path }}"

- name: "Add current inventories to the output yaml file: {{ output_path }}/<ORGANIZATION_NAME>/current_inventories.yaml"
  template:
    src: "templates/current_inventories.j2"
    dest: "{{ output_path }}/{{ current_inventory_dir.key }}/current_inventories.yaml"
    mode: '0644'
  vars:
    current_inventories_asset_value: "{{ current_inventory_dir.value }}"
  loop: "{{ current_inventories | default({}) | dict2items }}"
  loop_control:
    loop_var: current_inventory_dir
    label: "{{ output_path }}/{{ current_inventory_dir.key }}/current_inventories.yaml"

- name: "Set local_output_path"
  set_fact:
    local_output_path: "{{ output_path }}"

- name: "Set the inventory's inventory sources"
  include_tasks: "inventory_sources.yml"
  vars:
    output_path: "{{ local_output_path }}/{{ current_inventory_sources.key }}"
    current_organization_inventories: "{{ current_inventory_sources.value }}"
  loop: "{{ current_inventories | default({}) | dict2items }}"
  loop_control:
    loop_var: current_inventory_sources
    label: "{{ local_output_path }}/{{ current_inventory_sources.key }}"

- name: "Set the inventory's hosts"
  include_tasks: "hosts.yml"
  vars:
    output_path: "{{ local_output_path }}/{{ current_inventory_hosts.key }}"
    current_organization_inventories: "{{ current_inventory_hosts.value }}"
  loop: "{{ current_inventories | default({}) | dict2items }}"
  loop_control:
    loop_var: current_inventory_hosts
    label: "{{ local_output_path }}/{{ current_inventory_hosts.key }}"

- name: "Set the inventory's groups"
  include_tasks: "groups.yml"
  vars:
    output_path: "{{ local_output_path }}/{{ current_inventory_groups.key }}"
    current_organization_inventories: "{{ current_inventory_groups.value }}"
  loop: "{{ current_inventories | default({}) | dict2items }}"
  loop_control:
    loop_var: current_inventory_groups
    label: "{{ local_output_path }}/{{ current_inventory_groups.key }}"
...
