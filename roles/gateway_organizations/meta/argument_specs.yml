---
argument_specs:
  main:
<<<<<<< HEAD
    short_description: An Ansible Role to create organizations on Ansible Controller.
    options:
      controller_organizations:
        description: Data structure describing your organizations
        type: list
        elements: dict
        # options:
        #   name:
        #     required: true
        #     type: str
        #     description: Name of organization
        #   description:
        #     required: false
        #     type: str
        #     description: Description to use for the organization.
        #   custom_virtualenv:
        #     required: false
        #     type: str
        #     description: Local absolute file path containing a custom Python virtualenv to use.
        #   max_hosts:
        #     required: false
        #     type: int
        #     description: The max hosts allowed in this organization.
        #   instance_groups:
        #     required: false
        #     type: list
        #     elements: str
        #     description: list of Instance Groups for this Organization to run on.
        #   galaxy_credentials:
        #     required: false
        #     type: list
        #     elements: str
        #     description: The credentials to use with private automationhub.
        #   default_environment:
        #     required: false
        #     type: str
        #     description: Default Execution Environment to use for jobs owned by the Organization.
        #   notification_templates_started:
        #     required: false
        #     type: list
        #     elements: str
        #     description: The notifications on started to use for this organization in a list.
        #   notification_templates_success:
        #     required: false
        #     type: list
        #     elements: str
        #     description: The notifications on success to use for this organization in a list.
        #   notification_templates_error:
        #     required: false
        #     type: list
        #     elements: str
        #     description: The notifications on error to use for this organization in a list.
        #   notification_templates_approvals:
        #     required: false
        #     type: list
        #     elements: str
        #     description: The notifications for approval to use for this organization in a list.
        #   state:
        #     default: "{{ controller_state | default('present') }}"
        #     required: false
        #     type: str
        #     description: Desired state of the resource.

      assign_galaxy_credentials_to_org:
        default: true
        required: false
        type: bool
        description: Boolean to indicate whether credentials should be assigned to the organization or not. It should be noted that credentials must exist before adding it.
      assign_default_ee_to_org:
        default: true
        required: false
        type: bool
        description: Boolean to indicate whether default execution environment should be assigned to the organization or not. It should be noted that execution environment must exist before adding it.
      assign_notification_templates_to_org:
        default: true
        required: false
        type: bool
        description: Boolean to indicate whether notification templates should be assigned to the organization or not. It should be noted that notification templates must exist before adding them.

      # Async variables
      controller_configuration_organizations_async_retries:
        default: "{{ controller_configuration_async_retries | default(30) }}"
        required: false
        description: This variable sets the number of retries to attempt for the role.
      controller_configuration_async_retries:
        default: 30
        required: false
        description: This variable sets number of retries across all roles as a default.
      controller_configuration_organizations_async_delay:
        default: "{{ controller_configuration_async_delay | default(1) }}"
        required: false
        description: This variable sets delay between retries for the role.
      controller_configuration_async_delay:
        default: 1
        required: false
        description: This variable sets delay between retries across all roles as a default.
      controller_configuration_async_dir:
        default: null
        required: false
        description: Sets the directory to write the results file for async tasks. The default value is set to `null` which uses the Ansible Default of `/root/.ansible_async/`.


      # No_log variables
      controller_configuration_organizations_secure_logging:
        default: "{{ controller_configuration_secure_logging | default(false) }}"
        required: false
        type: bool
        description: Whether or not to include the sensitive tasks from this role in the log. Set this value to `true` if you will be providing your sensitive values from elsewhere.
      controller_configuration_secure_logging:
        default: false
=======
    short_description: An Ansible Role to create organizations on automation platform gateway.
    options:
      organizations_list:
        description: Data structure describing your organizations
        type: list
        required: true
        elements: dict
        options:
          name:
            required: true
            type: str
            description: Name of the resource
          new_name:
            type: str
            description: Setting this option will change the existing name (looked up via the name field)
          description:
            type: str
            description: Description of the organization
          state:
            default: "{{ gateway_state | default('present') }}"
            required: false
            type: str
            description: Desired state of the resource.

      # Async variables
      organizations_async_retries:
        default: "{{ gateway_configuration_async_retries | default(30) }}"
        required: false
        description: This variable sets the number of retries to attempt for the role.
      gateway_configuration_async_retries:
        default: 30
        required: false
        description: This variable sets number of retries across all roles as a default.
      organizations_async_delay:
        default: "{{ gateway_configuration_async_delay | default(1) }}"
        required: false
        description: This variable sets delay between retries for the role.
      gateway_configuration_async_delay:
        default: 1
        required: false
        description: This variable sets delay between retries across all roles as a default.
      platform_configuration_async_dir:
        default: null
        required: false
        description: >
          Sets the directory to write the results file for async tasks.
          The default value is set to `null` which uses the Ansible Default of `~/.ansible_async`.


      # No_log variables
      organizations_secure_logging:
        default: "{{ gateway_configuration_secure_logging | default(false) }}"
        required: false
        type: bool
        description: >
          Whether or not to include the sensitive tasks from this role in the log.
          Set this value to `true` if you will be providing your sensitive values from elsewhere.
      gateway_configuration_secure_logging:
        default: true
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        required: false
        type: bool
        description: This variable enables secure logging across all roles as a default.

      # Generic across all roles
<<<<<<< HEAD
      controller_state:
=======
      gateway_state:
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        default: present
        required: false
        description: The state all objects will take unless overridden by object default
        type: str
<<<<<<< HEAD
      controller_hostname:
        default: None
        required: false
        description: URL to the Ansible Controller Server.
        type: str
      controller_validate_certs:
        default: true
        required: false
        description: Whether or not to validate the Ansible Controller Server's SSL certificate.
        type: str
      controller_username:
        default: None
        required: false
        description: Admin User on the Ansible Controller Server. Either username / password or oauthtoken need to be specified.
        type: str
      controller_password:
        default: None
        required: false
        description: Controller Admin User's password on the Ansible Controller Server. This should be stored in an Ansible Vault at vars/controller-secrets.yml or elsewhere and called from a parent playbook. Either username / password or oauthtoken need to be specified.
        type: str
      controller_oauthtoken:
        default: None
        required: false
        description: Controller Admin User's token on the Ansible Controller Server. This should be stored in an Ansible Vault at or elsewhere and called from a parent playbook. Either username / password or oauthtoken need to be specified.
=======
      gateway_hostname:
        default: None
        required: false
        description: URL to the automation platform gateway.
        type: str
      gateway_validate_certs:
        default: true
        required: false
        description: Whether or not to validate the automation platform gateway's SSL certificate.
        type: str
      gateway_username:
        default: None
        required: false
        description: user on the automation platform gateway. Either username / password or oauthtoken need to be specified.
        type: str
      gateway_password:
        default: None
        required: false
        description: >
          Gateway user's password on the automation platform gateway.
          This should be stored in an Ansible Vault at vars/gateway-secrets.yml or elsewhere and called from a parent playbook.
          Either username / password or oauthtoken need to be specified.
        type: str
      gateway_oauthtoken:
        default: None
        required: false
        description: >
          Gateway user's token on the automation platform gateway.
          This should be stored in an Ansible Vault at or elsewhere and called from a parent playbook.
          Either username / password or oauthtoken need to be specified.
>>>>>>> 40b40ddac1c00aac7d878bd41af23a6d562296e5
        type: str
...
